-- Configuration
local config = {
    usePrediction = true,
    AutoPred = true,
    prediction = 0.077285846595,
    keybind = Enum.KeyCode.E,
    toggleGuiKeybind = Enum.KeyCode.Insert,
    offset = 1,
    resolver = false,
    smoothness = 1,
    hitPart = "HumanoidRootPart",
    antiGroundShots = false,
    groundShotsValue = 0.5,
    universal = true,
    aimbotMode = "toggle",
    espEnabled = true,  -- New setting for ESP
    teamCheck = true  -- New setting for team check
}

-- Services
local players = game:GetService("Players")
local userInputService = game:GetService("UserInputService")
local runService = game:GetService("RunService")
local currentCamera = workspace.CurrentCamera

-- Local Player
local localPlayer = players.LocalPlayer
local mouse = localPlayer:GetMouse()

-- Create GUI
local ScreenGui = Instance.new("ScreenGui", localPlayer:WaitForChild("PlayerGui"))
local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 400, 0, 700) -- Increased size
Frame.Position = UDim2.new(0, 10, 0, 10)
Frame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true
Frame.Visible = true

-- UI Corner for rounded corners
local UICorner = Instance.new("UICorner", Frame)
UICorner.CornerRadius = UDim.new(0, 12)

-- UI Stroke for border
local UIStroke = Instance.new("UIStroke", Frame)
UIStroke.Color = Color3.fromRGB(255, 255, 255)
UIStroke.Thickness = 2

local settings = {
    {name = "usePrediction", type = "boolean"},
    {name = "AutoPred", type = "boolean"},
    {name = "prediction", type = "number"},
    {name = "keybind", type = "keybind"},
    {name = "offset", type = "number"},
    {name = "resolver", type = "boolean"},
    {name = "smoothness", type = "number"},
    {name = "hitPart", type = "text"},
    {name = "antiGroundShots", type = "boolean"},
    {name = "groundShotsValue", type = "number"},
    {name = "universal", type = "boolean"},
    {name = "aimbotMode", type = "text"},
    {name = "espEnabled", type = "boolean"}, -- Added ESP setting
    {name = "teamCheck", type = "boolean"} -- Added team check setting
}

local function createSetting(name, settingType, position)
    local Label = Instance.new("TextLabel", Frame)
    Label.Text = name
    Label.Size = UDim2.new(0, 150, 0, 40) -- Increased size
    Label.Position = UDim2.new(0, 10, 0, position)
    Label.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
    Label.BorderSizePixel = 0
    Label.TextColor3 = Color3.fromRGB(255, 255, 255)
    Label.TextSize = 18 -- Increased text size
    Label.Font = Enum.Font.Gotham

    -- UI Corner for rounded corners
    local UICornerLabel = Instance.new("UICorner", Label)
    UICornerLabel.CornerRadius = UDim.new(0, 8)

    local Input
    if settingType == "boolean" then
        Input = Instance.new("TextButton", Frame)
        Input.Text = tostring(config[name])
        Input.MouseButton1Click:Connect(function()
            config[name] = not config[name]
            Input.Text = tostring(config[name])
        end)
    else
        Input = Instance.new("TextBox", Frame)
        Input.Text = tostring(config[name])
        Input.FocusLost:Connect(function()
            if settingType == "number" then
                config[name] = tonumber(Input.Text)
            elseif settingType == "text" then
                config[name] = Input.Text
            elseif settingType == "keybind" then
                config[name] = Enum.KeyCode[Input.Text]
            end
        end)
    end
    Input.Size = UDim2.new(0, 200, 0, 40) -- Increased size
    Input.Position = UDim2.new(0, 170, 0, position)
    Input.BackgroundColor3 = Color3.fromRGB(65, 65, 65)
    Input.BorderSizePixel = 0
    Input.TextColor3 = Color3.fromRGB(255, 255, 255)
    Input.TextSize = 18 -- Increased text size
    Input.Font = Enum.Font.Gotham

    -- UI Corner for rounded corners
    local UICornerInput = Instance.new("UICorner", Input)
    UICornerInput.CornerRadius = UDim.new(0, 8)
end

for i, setting in ipairs(settings) do
    createSetting(setting.name, setting.type, (i - 1) * 50) -- Increased spacing
end

-- Function to check if a target is valid
local function isValidTarget(v)
    local humanoid = v:FindFirstChildOfClass("Humanoid")
    if humanoid and humanoid.Health > 0 then
        local hitPart = v:FindFirstChild(config.hitPart)
        if not hitPart and config.universal then
            hitPart = v:FindFirstChild("UpperTorso") or v:FindFirstChild("Head") or v.PrimaryPart
        end
        if hitPart then
            local worldToViewportPoint, onScreen = currentCamera:WorldToViewportPoint(hitPart.Position)
            if onScreen then
                return hitPart, Vector2.new(worldToViewportPoint.X, worldToViewportPoint.Y)
            end
        end
    end
    return nil, nil
end

-- Function to find the closest target
local function target()
    local target = nil
    local shortestDistance = math.huge

    for _, v in ipairs(workspace:GetDescendants()) do
        if v:IsA("Model") and v ~= localPlayer.Character then
            local hitPart, screenPos = isValidTarget(v)
            if hitPart then
                local distance = (Vector2.new(mouse.X, mouse.Y) - screenPos).Magnitude
                if distance < shortestDistance then
                    target = hitPart
                    shortestDistance = distance
                end
            end
        end
    end
    return target
end

-- Variables to store state
local targeting = false
local victim = nil

-- Input event to toggle targeting and GUI visibility
userInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    if input.KeyCode == config.keybind then
        if config.aimbotMode == "toggle" then
            targeting = not targeting
            victim = targeting and target() or nil
        elseif config.aimbotMode == "hold" then
            targeting = true
            victim = target()
        end
    elseif input.KeyCode == config.toggleGuiKeybind then
        Frame.Visible = not Frame.Visible
    end
end)

-- Input event to stop targeting in hold mode
userInputService.InputEnded:Connect(function(input, processed)
    if processed then return end
    if config.aimbotMode == "hold" and input.KeyCode == config.keybind then
        targeting = false
        victim = nil
    end
end)

-- Variables to store velocity and position
local velocity = Vector3.new(0, 0, 0)
local oldPos = Vector3.new(0, 0, 0)

-- Heartbeat event to calculate velocity
runService.Heartbeat:Connect(function(deltaTime)
    if victim and victim.Parent then
        local currentPos = victim.Position
        local displacement = currentPos - oldPos
        velocity = velocity:Lerp(displacement / deltaTime, 0.4)
        oldPos = currentPos
    end
end)

-- Function to create a box around a player
local function createBox(v, color)
    local topLeft = Instance.new("Frame", ScreenGui)
    topLeft.BackgroundColor3 = color
    topLeft.BorderSizePixel = 0

    local topRight = Instance.new("Frame", ScreenGui)
    topRight.BackgroundColor3 = color
    topRight.BorderSizePixel = 0

    local bottomLeft = Instance.new("Frame", ScreenGui)
    bottomLeft.BackgroundColor3 = color
    bottomLeft.BorderSizePixel = 0

    local bottomRight = Instance.new("Frame", ScreenGui)
    bottomRight.BackgroundColor3 = color
    bottomRight.BorderSizePixel = 0

    return {topLeft, topRight, bottomLeft, bottomRight}
end

-- Function to update the position and size of the box
local function updateBox(box, v)
    local pos, size = currentCamera:WorldToViewportPoint(v.Position)
    local height = size.Y * 2
    local width = height / 2
    local x = pos.X - width / 2
    local y = pos.Y - height / 2

    box[1].Position = UDim2.new(0, x, 0, y)
box[1].Size = UDim2.new(0, width, 0, 2)

box[2].Position = UDim2.new(0, x + width, 0, y)
box[2].Size = UDim2.new(0, 2, 0, height)

box[3].Position = UDim2.new(0, x, 0, y + height)
box[3].Size = UDim2.new(0, width, 0, 2)

box[4].Position = UDim2.new(0, x, 0, y)
box[4].Size = UDim2.new(0, 2, 0, height)

end

– Function to check if a player is a teammate
local function isTeammate(player)
return player.Team == localPlayer.Team
end

– Table to store boxes
local playerBoxes = {}

– RenderStepped event to update camera position and ESP
runService.RenderStepped:Connect(function()
if config.AutoPred then
local pingValue = game:GetService(“Stats”).Network.ServerStatsItem[“Data Ping”]:GetValueString()
local split = string.split(pingValue, ‘(’)
local ping = tonumber(split[1])

    if ping then
        if ping < 30 then
            config.prediction = 0.12
        elseif ping < 40 then
            config.prediction = 0.12
        elseif ping < 50 then
            config.prediction = 0.125
        elseif ping < 70 then
            config.prediction = 0.1355
        elseif ping < 80 then
            config.prediction = 0.169
        elseif ping < 90 then
            config.prediction = 0.16
        elseif ping < 150 then
            config.prediction = 0.1922
        elseif ping < 200 then
            config.prediction = 0.1973432432343325
        end
    end
end

if targeting and victim and victim.Parent then
    local humanoid = victim.Parent:FindFirstChildOfClass("Humanoid")
    if humanoid and humanoid.Health > 0 then
        local pos = victim.Position
        if config.usePrediction then
            local vel = config.resolver and velocity or victim.Velocity
            pos = pos + Vector3.new(
                vel.X,
                config.antiGroundShots and (vel.Y * config.groundShotsValue) or vel.Y,
                vel.Z
            ) * config.prediction
        end
        currentCamera.CFrame = currentCamera.CFrame:Lerp(CFrame.new(currentCamera.CFrame.Position, pos), config.smoothness)
    end
end

if config.espEnabled then
    for _, player in ipairs(players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local color = Color3.fromRGB(255, 0, 0) -- Default to enemy color
            if config.teamCheck and isTeammate(player) then
                color = Color3.fromRGB(0, 0, 255) -- Teammate color
            end

            if not playerBoxes[player] then
                playerBoxes[player] = createBox(player.Character.HumanoidRootPart, color)
            end

            updateBox(playerBoxes[player], player.Character.HumanoidRootPart)
        end
    end
else
    for _, box in pairs(playerBoxes) do
        for _, part in ipairs(box) do
            part:Destroy()
        end
    end
    playerBoxes = {}
end

end)
